Unloading intel-oneapi-compilers/2021.4.0
  Unloading dependent: intel-mpi/2019-intel
intel-mpi: using intel wrappers for mpicc, mpif77, etc

Loading vasp/6.4.3
  Loading requirement: wannier90/3.1.0-intel21-impi
    intel-oneapi-compilers/2021.4.0 intel-mpi/2019-intel intel-mkl/2020
 running   48 mpi-ranks, on    4 nodes
 distrk:  each k-point on   48 cores,    1 groups
 distr:  one band on    1 cores,   48 groups
 vasp.6.4.3 19Mar24 (build Jun 26 2024 13:02:28) complex                        
  
 POSCAR found type information on POSCAR Ga
 POSCAR found :  1 types and       8 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 2 up to number-of-cores-per-socket                            |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing! More info at https://www.vasp.at/wiki/index.php/NCORE      |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for (Slater+PW92), standard interpolation
 found WAVECAR, reading the header
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ... GRIDC
 FFT: planning ... GRID_SOFT
 FFT: planning ... GRID
 reading WAVECAR
 the WAVECAR file was read successfully
 initial charge from wavefunction
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1    -0.232271701311E+02   -0.23227E+02   -0.51746E-06 18336   0.966E-03    0.151E-03
DAV:   2    -0.232271700840E+02    0.47128E-07   -0.45014E-07 15648   0.319E-03
   1 F= -.23227170E+02 E0= -.23225899E+02  d E =-.254257E-02
 Start KPOINTS_OPT (optional k-point list driver)
k-point batch [1-125\147]
       N       E                     dE             ncg
DAV:   1    -0.471297294496E+05   -0.22774E+06    24096
DAV:   2    -0.970099108313E+05   -0.49880E+05    28224
DAV:   3    -0.100387928439E+06   -0.33780E+04    28368
DAV:   4    -0.100424611972E+06   -0.36684E+02    31776
DAV:   5    -0.100425132499E+06   -0.52053E+00    28560
DAV:   6    -0.100425153856E+06   -0.21356E-01    37488
DAV:   7    -0.100425153927E+06   -0.71196E-04    23808
k-point batch [126-147\147]
       N       E                     dE             ncg
DAV:   1     0.163557910535E+06   -0.14739E+05     4272
DAV:   2     0.154972194319E+06   -0.85857E+04     4992
DAV:   3     0.154398835745E+06   -0.57336E+03     5136
DAV:   4     0.154392690082E+06   -0.61457E+01     5664
DAV:   5     0.154392601354E+06   -0.88728E-01     5040
DAV:   6     0.154392597762E+06   -0.35922E-02     6768
DAV:   7     0.154392597749E+06   -0.13579E-04     4320
 writing wavefunctions
