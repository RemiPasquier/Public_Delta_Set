Unloading intel-oneapi-compilers/2021.4.0
  Unloading dependent: intel-mpi/2019-intel
intel-mpi: using intel wrappers for mpicc, mpif77, etc

Loading vasp/6.4.3
  Loading requirement: wannier90/3.1.0-intel21-impi
    intel-oneapi-compilers/2021.4.0 intel-mpi/2019-intel intel-mkl/2020
 running   48 mpi-ranks, on    4 nodes
 distrk:  each k-point on   48 cores,    1 groups
 distr:  one band on    1 cores,   48 groups
 vasp.6.4.3 19Mar24 (build Jun 26 2024 13:02:28) complex                        
  
 POSCAR found type information on POSCAR Br
 POSCAR found :  1 types and       8 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 2 up to number-of-cores-per-socket                            |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing! More info at https://www.vasp.at/wiki/index.php/NCORE      |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for (Slater+PW92), standard interpolation
 found WAVECAR, reading the header
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ... GRIDC
 FFT: planning ... GRID_SOFT
 FFT: planning ... GRID
 reading WAVECAR
 the WAVECAR file was read successfully
 initial charge from wavefunction
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1    -0.130276544775E+02   -0.13028E+02   -0.77851E-06  9552   0.989E-03    0.332E-03
DAV:   2    -0.130276545059E+02   -0.28468E-07   -0.43375E-07  9408   0.249E-03
   1 F= -.13027655E+02 E0= -.13027655E+02  d E =-.170095E-16
 Start KPOINTS_OPT (optional k-point list driver)
k-point batch [1-125\147]
       N       E                     dE             ncg
DAV:   1    -0.176360803486E+05   -0.12773E+06    12000
DAV:   2    -0.466881022824E+05   -0.29052E+05    19008
DAV:   3    -0.474034689399E+05   -0.71537E+03    12048
DAV:   4    -0.474074926801E+05   -0.40237E+01    24000
DAV:   5    -0.474074927965E+05   -0.11641E-03    17904
DAV:   6    -0.474074927967E+05   -0.18550E-06    24000
k-point batch [126-147\147]
       N       E                     dE             ncg
DAV:   1     0.101620903160E+06   -0.96090E+04     2112
DAV:   2     0.964097899436E+05   -0.52111E+04     3216
DAV:   3     0.962694775162E+05   -0.14031E+03     2112
DAV:   4     0.962687342338E+05   -0.74328E+00     4176
DAV:   5     0.962687341970E+05   -0.36813E-04     2784
 writing wavefunctions
