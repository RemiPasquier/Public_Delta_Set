Unloading intel-oneapi-compilers/2021.4.0
  Unloading dependent: intel-mpi/2019-intel
intel-mpi: using intel wrappers for mpicc, mpif77, etc

Loading vasp/6.4.3
  Loading requirement: wannier90/3.1.0-intel21-impi
    intel-oneapi-compilers/2021.4.0 intel-mpi/2019-intel intel-mkl/2020
 running   48 mpi-ranks, on    4 nodes
 distrk:  each k-point on   48 cores,    1 groups
 distr:  one band on    1 cores,   48 groups
 vasp.6.4.3 19Mar24 (build Jun 26 2024 13:02:28) complex                        
  
 POSCAR found type information on POSCAR I 
 POSCAR found :  1 types and       8 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 2 up to number-of-cores-per-socket                            |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing! More info at https://www.vasp.at/wiki/index.php/NCORE      |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for (Slater+PW92), standard interpolation
 found WAVECAR, reading the header
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ... GRIDC
 FFT: planning ... GRID_SOFT
 FFT: planning ... GRID
 reading WAVECAR
 the WAVECAR file was read successfully
 initial charge from wavefunction
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1    -0.120611806651E+02   -0.12061E+02   -0.92417E-06 10896   0.969E-03    0.195E-03
DAV:   2    -0.120611806733E+02   -0.82555E-08   -0.67087E-07  9648   0.270E-03
   1 F= -.12061181E+02 E0= -.12061181E+02  d E =-.634838E-12
 Start KPOINTS_OPT (optional k-point list driver)
k-point batch [1-125\147]
       N       E                     dE             ncg
DAV:   1    -0.151556100465E+04   -0.93765E+05    12000
DAV:   2    -0.244413172440E+05   -0.22926E+05    18192
DAV:   3    -0.250235600279E+05   -0.58224E+03    13440
DAV:   4    -0.250300397541E+05   -0.64797E+01    23568
DAV:   5    -0.250300409258E+05   -0.11717E-02    17520
DAV:   6    -0.250300409306E+05   -0.48239E-05    23472
k-point batch [126-147\147]
       N       E                     dE             ncg
DAV:   1     0.874957419988E+05   -0.55838E+04     2112
DAV:   2     0.833236049169E+05   -0.41721E+04     3168
DAV:   3     0.832124414906E+05   -0.11116E+03     2352
DAV:   4     0.832113124337E+05   -0.11291E+01     4176
DAV:   5     0.832113122502E+05   -0.18356E-03     3024
DAV:   6     0.832113122494E+05   -0.75344E-06     4176
 writing wavefunctions
