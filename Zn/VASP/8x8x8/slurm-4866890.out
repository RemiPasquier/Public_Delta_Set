Unloading intel-oneapi-compilers/2021.4.0
  Unloading dependent: intel-mpi/2019-intel
intel-mpi: using intel wrappers for mpicc, mpif77, etc

Loading vasp/6.4.3
  Loading requirement: wannier90/3.1.0-intel21-impi
    intel-oneapi-compilers/2021.4.0 intel-mpi/2019-intel intel-mkl/2020
 running   48 mpi-ranks, on    4 nodes
 distrk:  each k-point on   48 cores,    1 groups
 distr:  one band on    1 cores,   48 groups
 vasp.6.4.3 19Mar24 (build Jun 26 2024 13:02:28) complex                        
  
 POSCAR found type information on POSCAR Zn
 POSCAR found :  1 types and       2 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 2 up to number-of-cores-per-socket                            |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing! More info at https://www.vasp.at/wiki/index.php/NCORE      |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for (Slater+PW92), standard interpolation
 found WAVECAR, reading the header
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ... GRIDC
 FFT: planning ... GRID_SOFT
 FFT: planning ... GRID
 reading WAVECAR
 the WAVECAR file was read successfully
 initial charge from wavefunction
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1    -0.217112881227E+01   -0.21711E+01   -0.10552E-04  2448   0.595E-02    0.184E-02
DAV:   2    -0.217112175703E+01    0.70552E-05   -0.51720E-05  2400   0.416E-02
   1 F= -.21711218E+01 E0= -.21701629E+01  d E =-.191776E-02
 Start KPOINTS_OPT (optional k-point list driver)
k-point batch [1-50\147]
       N       E                     dE             ncg
DAV:   1    -0.472803136003E+04   -0.27391E+05     6288
DAV:   2    -0.486095829048E+04   -0.13293E+03     5616
DAV:   3    -0.486106087583E+04   -0.10259E+00     7680
DAV:   4    -0.486106087675E+04   -0.92503E-06     6192
k-point batch [51-100\147]
       N       E                     dE             ncg
DAV:   1    -0.433307081027E+04   -0.42485E+05     5712
DAV:   2    -0.453376145456E+04   -0.20069E+03     6240
DAV:   3    -0.453385321732E+04   -0.91763E-01     6720
DAV:   4    -0.453385321876E+04   -0.14467E-05     7152
k-point batch [101-147\147]
       N       E                     dE             ncg
DAV:   1    -0.233242984691E+04   -0.15155E+05     5808
DAV:   2    -0.246861295894E+04   -0.13618E+03     5616
DAV:   3    -0.246870566093E+04   -0.92702E-01     6816
DAV:   4    -0.246870566135E+04   -0.41792E-06     6528
 writing wavefunctions
