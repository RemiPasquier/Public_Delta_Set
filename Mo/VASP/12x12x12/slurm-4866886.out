Unloading intel-oneapi-compilers/2021.4.0
  Unloading dependent: intel-mpi/2019-intel
intel-mpi: using intel wrappers for mpicc, mpif77, etc

Loading vasp/6.4.3
  Loading requirement: wannier90/3.1.0-intel21-impi
    intel-oneapi-compilers/2021.4.0 intel-mpi/2019-intel intel-mkl/2020
 running   48 mpi-ranks, on    4 nodes
 distrk:  each k-point on   48 cores,    1 groups
 distr:  one band on    1 cores,   48 groups
 vasp.6.4.3 19Mar24 (build Jun 26 2024 13:02:28) complex                        
  
 POSCAR found type information on POSCAR Mo
 POSCAR found :  1 types and       2 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 2 up to number-of-cores-per-socket                            |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing! More info at https://www.vasp.at/wiki/index.php/NCORE      |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for (Slater+PW92), standard interpolation
 found WAVECAR, reading the header
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ... GRIDC
 FFT: planning ... GRID_SOFT
 FFT: planning ... GRID
 reading WAVECAR
 the WAVECAR file was read successfully
 initial charge from wavefunction
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1    -0.218710164795E+02   -0.21871E+02   -0.21626E-07  4128   0.215E-03    0.536E-04
DAV:   2    -0.218710165002E+02   -0.20673E-07   -0.80294E-09  4128   0.372E-04
   1 F= -.21871017E+02 E0= -.21870502E+02  d E =-.102864E-02
 Start KPOINTS_OPT (optional k-point list driver)
k-point batch [1-84\147]
       N       E                     dE             ncg
DAV:   1    -0.279278105202E+05   -0.90698E+05     9072
DAV:   2    -0.299365209842E+05   -0.20087E+04    10752
DAV:   3    -0.299378467462E+05   -0.13258E+01    11232
DAV:   4    -0.299378470492E+05   -0.30299E-03    12624
DAV:   5    -0.299378470492E+05   -0.83674E-09    10896
k-point batch [85-147\147]
       N       E                     dE             ncg
DAV:   1    -0.144265598932E+04   -0.45864E+05     6048
DAV:   2    -0.339203163077E+04   -0.19494E+04     8256
DAV:   3    -0.339380192981E+04   -0.17703E+01     8544
DAV:   4    -0.339380222082E+04   -0.29101E-03     9456
DAV:   5    -0.339380222082E+04   -0.75670E-09     8544
 writing wavefunctions
