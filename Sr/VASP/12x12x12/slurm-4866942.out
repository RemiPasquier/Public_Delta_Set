Unloading intel-oneapi-compilers/2021.4.0
  Unloading dependent: intel-mpi/2019-intel
intel-mpi: using intel wrappers for mpicc, mpif77, etc

Loading vasp/6.4.3
  Loading requirement: wannier90/3.1.0-intel21-impi
    intel-oneapi-compilers/2021.4.0 intel-mpi/2019-intel intel-mkl/2020
 running   48 mpi-ranks, on    4 nodes
 distrk:  each k-point on   48 cores,    1 groups
 distr:  one band on    1 cores,   48 groups
 vasp.6.4.3 19Mar24 (build Jun 26 2024 13:02:28) complex                        
  
 POSCAR found type information on POSCAR Sr
 POSCAR found :  1 types and       4 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 2 up to number-of-cores-per-socket                            |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing! More info at https://www.vasp.at/wiki/index.php/NCORE      |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for (Slater+PW92), standard interpolation
 found WAVECAR, reading the header
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ... GRIDC
 FFT: planning ... GRID_SOFT
 FFT: planning ... GRID
 reading WAVECAR
 the WAVECAR file was read successfully
 initial charge from wavefunction
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1    -0.655574228297E+01   -0.65557E+01   -0.15388E-05  6960   0.129E-02    0.883E-03
DAV:   2    -0.655574230908E+01   -0.26105E-07   -0.10409E-06  5712   0.234E-03
   1 F= -.65557423E+01 E0= -.65514824E+01  d E =-.851988E-02
 Start KPOINTS_OPT (optional k-point list driver)
k-point batch [1-84\147]
       N       E                     dE             ncg
DAV:   1    -0.519431626312E+05   -0.93469E+05     8064
DAV:   2    -0.574678909311E+05   -0.55247E+04    13728
DAV:   3    -0.575016278839E+05   -0.33737E+02     8064
DAV:   4    -0.575023378703E+05   -0.70999E+00    15936
DAV:   5    -0.575023379402E+05   -0.69869E-04     8064
k-point batch [85-147\147]
       N       E                     dE             ncg
DAV:   1    -0.252415257377E+05   -0.69562E+05     6048
DAV:   2    -0.293460890573E+05   -0.41046E+04    10608
DAV:   3    -0.293696583674E+05   -0.23569E+02     6048
DAV:   4    -0.293701325205E+05   -0.47415E+00    11904
DAV:   5    -0.293701325670E+05   -0.46561E-04     6144
 writing wavefunctions
